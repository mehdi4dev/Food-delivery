{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"stringValue":"\"login\"","kind":"ObjectId","value":"login","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"","stack":"CastError: Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4358:21)\n    at model.Query.Query.then (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4452:15)"}
{"stringValue":"\"login\"","kind":"ObjectId","value":"login","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"","stack":"CastError: Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4358:21)\n    at model.Query.Query.then (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4452:15)"}
{"message":"db connected","level":"info"}
{"stringValue":"\"login\"","kind":"ObjectId","value":"login","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"","stack":"CastError: Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4358:21)\n    at model.Query.Query.then (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4452:15)"}
{"message":"db connected","level":"info"}
{"stringValue":"\"login\"","kind":"ObjectId","value":"login","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"","stack":"CastError: Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4358:21)\n    at model.Query.Query.then (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4452:15)"}
{"stringValue":"\"login\"","kind":"ObjectId","value":"login","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"","stack":"CastError: Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4358:21)\n    at model.Query.Query.then (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4452:15)"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"stringValue":"\"login\"","kind":"ObjectId","value":"login","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"","stack":"CastError: Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4358:21)\n    at model.Query.Query.then (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4452:15)"}
{"message":"db connected","level":"info"}
{"stringValue":"\"login\"","kind":"ObjectId","value":"login","path":"_id","reason":{},"level":"error","message":"Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\" Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"","stack":"CastError: Cast to ObjectId failed for value \"login\" at path \"_id\" for model \"restaurant\"\n    at model.Query.exec (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4358:21)\n    at model.Query.Query.then (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\query.js:4452:15)"}
{"message":"db connected","level":"info"}
{"level":"error","message":"loginValidator is not defined loginValidator is not defined","stack":"ReferenceError: loginValidator is not defined\n    at login (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\usersController.js:10:27)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"level":"error","message":"Cannot read property '_id' of undefined Cannot read property '_id' of undefined","stack":"TypeError: Cannot read property '_id' of undefined\n    at addFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:49:65)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"level":"error","message":"Cannot read property '_id' of undefined Cannot read property '_id' of undefined","stack":"TypeError: Cannot read property '_id' of undefined\n    at getFoodList (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:56:66)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:284:7"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"code":"ERR_HTTP_INVALID_STATUS_CODE","level":"error","message":"Invalid status code: undefined Invalid status code: undefined","stack":"RangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: undefined\n    at new NodeError (node:internal/errors:329:5)\n    at ServerResponse.writeHead (node:_http_server:279:11)\n    at ServerResponse._implicitHeader (node:_http_server:270:8)\n    at ServerResponse.end (node:_http_outgoing:851:10)\n    at ServerResponse.send (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\response.js:221:10)\n    at deleteFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:68:22)\n    at processTicksAndRejections (node:internal/process/task_queues:94:5)"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"level":"error","message":"restaurant.menu.delete is not a function restaurant.menu.delete is not a function","stack":"TypeError: restaurant.menu.delete is not a function\n    at deleteFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:69:31)\n    at processTicksAndRejections (node:internal/process/task_queues:94:5)"}
{"message":"db connected","level":"info"}
{"level":"error","message":"Cannot read property 'remove' of null Cannot read property 'remove' of null","stack":"TypeError: Cannot read property 'remove' of null\n    at deleteFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:69:35)\n    at processTicksAndRejections (node:internal/process/task_queues:94:5)"}
{"level":"error","message":"Cannot read property 'remove' of null Cannot read property 'remove' of null","stack":"TypeError: Cannot read property 'remove' of null\n    at deleteFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:69:35)\n    at processTicksAndRejections (node:internal/process/task_queues:94:5)"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"level":"error","message":"id is not defined id is not defined","stack":"ReferenceError: id is not defined\n    at deleteFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:68:57)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\middleware\\restaurantAdmin.js:6:5)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at module.exports (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\middleware\\Auth.js:11:5)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\express\\lib\\router\\index.js:281:22"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"level":"error","message":"The #update method is not available on EmbeddedDocuments The #update method is not available on EmbeddedDocuments","stack":"Error: The #update method is not available on EmbeddedDocuments\n    at EmbeddedDocument.update (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\types\\embedded.js:250:9)\n    at updateFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:81:36)\n    at processTicksAndRejections (node:internal/process/task_queues:94:5)"}
{"level":"error","message":"The #update method is not available on EmbeddedDocuments The #update method is not available on EmbeddedDocuments","stack":"Error: The #update method is not available on EmbeddedDocuments\n    at EmbeddedDocument.update (C:\\Users\\mehdi\\Desktop\\food delivery\\node_modules\\mongoose\\lib\\types\\embedded.js:250:9)\n    at updateFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:81:36)\n    at processTicksAndRejections (node:internal/process/task_queues:94:5)"}
{"message":"db connected","level":"info"}
{"level":"error","message":"restaurant.menu.findByIdAndUpdate is not a function restaurant.menu.findByIdAndUpdate is not a function","stack":"TypeError: restaurant.menu.findByIdAndUpdate is not a function\n    at updateFood (C:\\Users\\mehdi\\Desktop\\food delivery\\app\\http\\controller\\restaurantController.js:81:25)\n    at processTicksAndRejections (node:internal/process/task_queues:94:5)"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
{"message":"db connected","level":"info"}
